# all unassigned values will be read from the parent-file instead
# set null if there is no parent-file
# MUST BE THE FIRST FIELD
parent null

# a unique identifier for this entity
# no spaces
# MUST BE THE SECOND FIELD
name testObject

# the display name of the entity (two or more entities may have the same 'fullName' but never the same 'name'
# spaces are allowed
fullName Test Object

# how the entity reacts to physical force applied to it
# types:
#     1 physical
#     2 static
physType 1 

# types:
#     1 solid (all objects will collide with this object)
#     2 gameSolid (only object marked as gamePlay objects will collide with the object (players, projectiles, etc.) but not particles etc.
#     3 not Solid (everything will pass through this entity)
collType 1

# if true the entity won't be rendered in-game
invis false

# should the entity be affected by gravity
grav true

# set to "a/class/that/does/stuff.class to tell the engine that this entity should have a special class assigned to it
# otherwise the parents .class will be used instead. Set to 'null' if you want the default class to handle this entity
class null

# the display model for this entity
model testObject.obj

# the rough collision box to check for a possible collision before complex handling
# types:
#     block x, y, z
#     sphere radius
#     ellipsoid x y z
#     pyramid x, y, height
#     cone r, h
collisionBox block 5.0 7.5 1.25

# the complex collision model (might be something else than the display model)
collisionModel testObject.obj

###### INDIVIDUAL VARIABLES ######
# these will be read in and stored in a HashMap for in-game access
# types:
#     byte
#     float
#     integer
#     boolean
#     string

boolean isThisATest true
integer randomInteger 5
# everything after a string's name will be read in
string testString this is only a test it doesn't matter what this text says